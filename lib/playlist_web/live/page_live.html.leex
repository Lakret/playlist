<%
  import PlaylistWeb.PageView

  alias PlaylistWeb.PageView
  alias PlaylistWeb.PageLive.State
%>

<div class="header">
  <%
    no_groups_button_class = if is_nil(@state.grouping), do: "radio-group__button radio-group__button--selected", else: "radio-group__button"
    album_button_class = if @state.grouping == :album, do: "radio-group__button radio-group__button--selected", else: "radio-group__button"
  %>

  <div class="radio-group">
    <div phx-click="change_grouping" phx-value-grouping="nil" class="<%= no_groups_button_class %>">
      No Groups
    </div>

    <div phx-click="change_grouping" phx-value-grouping="album" class="<%= album_button_class %>">
      By Album
    </div>
  </div>
</div>

<div phx-hook="ScrollToTrack" id="playlist" class="playlist">
  <!-- Grouped by Album view -->
  <%= if @state.grouping == :album do %>
    <%
      {grouped_queue, current_group, current_artist_and_album} =
        Enum.with_index(@state.queue)
        |> Enum.reduce(
          {[], [], nil},
          fn {track, track_idx}, {queue, current_group, current_artist_and_album} ->
            case current_artist_and_album do
              nil ->
                {queue, [{track_idx, track}], {track.artist, track.album}}

              {current_artist, current_album} ->
                if current_artist == track.artist &&  current_album == track.album do
                  {queue, [{track_idx, track} | current_group], current_artist_and_album}
                else
                  previous_group = Enum.reverse(current_group)
                  queue = [{current_artist_and_album, previous_group} | queue]

                  {queue, [{track_idx, track}], {track.artist, track.album}}
                end
            end
          end)

      previous_group = Enum.reverse(current_group)
      grouped_queue = [{current_artist_and_album, previous_group} | grouped_queue]
      grouped_queue = Enum.reverse(grouped_queue)
    %>

    <div>
      <%= for {{artist, album}, tracks_in_group} <- grouped_queue do %>
        <div class="playlist__group_header">
          <span><%= artist %> â€” <%= album %></span>
        </div>

        <%= for {track_idx, track} <- tracks_in_group do %>
          <%= render PageView, "track.html", track: track, track_idx: track_idx,
                                             playing_idx: @state.playing_idx %>
        <% end %>
      <% end %>
    </div>

  <!-- No Grouping view -->
  <% else %>
    <%= for {track, track_idx} <- Enum.with_index(@state.queue) do %>
      <%= render PageView, "track.html", track: track, track_idx: track_idx,
                                         playing_idx: @state.playing_idx %>
    <% end %>
  <% end %>
</div>

<div class="controls-pane">
  <%
    aux_button_class =
      if @state.playing_idx do
        "media-button"
      else
        "media-button media-button--disabled"
      end
  %>

  <div class="controls-pane__buttons">
    <div class="controls-pane__small_button_container">
      <div class="<%= aux_button_class %>" phx-click="previous">
        <i class="fas fa-backward"></i>
      </div>
    </div>

    <div class="media-button media-button--large" phx-click="play_or_pause">
      <%= if @state.playing_idx do %>
      <i class="fas fa-play fa-2x"></i>
      <% else %>
      <i class="fas fa-pause fa-2x"></i>
      <% end %>
    </div>

    <div class="controls-pane__small_button_container">
      <div class="<%= aux_button_class %>" phx-click="next">
        <i class="fas fa-forward"></i>
      </div>
    </div>
  </div>

  <%
    track_length = State.get_playing_or_paused_track_length(@state) |> pretty_time()

    {play_position, track_position_class, filler_style} =
      if State.playing?(@state) do
        play_position = State.get_play_position(@state) |> pretty_time()
        length_percentage = State.get_play_position_percentage(@state)

        {play_position, "track-position", "width: #{length_percentage}%;"}
      else
        {"0:00", "track-position track-position--disabled", "width: 0;"}
      end
  %>

  <div class="controls-pane__track_position">
    <span class="controls-pane__track_position_time"><%= play_position %></span>
    <div class="<%= track_position_class %>" phx-click="scrub">
      <div class="track-position__filler" style="<%= filler_style %>"></div>
    </div>
    <span class="controls-pane__track_position_time"><%= track_length %></span>
  </div>
</div>
